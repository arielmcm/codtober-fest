pipeline {
  agent {
    label 'docker'
  }
  environment {
    TEAMCITY_CHARLIE_CREDENTIALS = credentials('teamcity-at-charlie-key-file')
  }
  stages {
    stage('test') {
      agent {
        docker {
          image 'rvntone/node:8-withrsync'
          args '-v $HOME/yarn-cache:/home/node/.cache/yarn'
        }
      }
      steps {
        catchError() {
          sh 'yarn --frozen-lockfile && yarn run test --coverage'
        }
      }
      post {
        failure {
          error 'Tests failed'
        }
      }
    }
    stage('deploy-to-master') {
      agent {
        docker {
          image 'rvntone/node:8-withrsync'
          args '-v $HOME/yarn-cache:/home/node/.cache/yarn'
        }
      }
      when { 
        expression { 
          return env.BRANCH_NAME == 'master';
        } 
      }
      steps {
        sh 'yarn --frozen-lockfile'
        sh 'grep "charlie" ~/.ssh/known_hosts || mkdir -p ~/.ssh && ssh-keyscan -t rsa charlie >> ~/.ssh/known_hosts'
        sh "rsync -Pav -e 'ssh -i ${env.TEAMCITY_CHARLIE_CREDENTIALS}' ./ teamcity@charlie:data/projects/frontier7/stage/f7-projects-api"
      }
    }
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '20', daysToKeepStr: '20'))
  }
  post { always { sendSlackNotification workspace: 'frontier-7', channel: '#jenkins-deployment' } }
}